apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-scheduler.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: scheduler
  name: scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: scheduler
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-scheduler.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/dwh: "true"
        io.kompose.service: scheduler
    spec:
      containers:
      - args:
        - scheduler
        env:
        - name: AIRFLOW_BUSINESS_UNIT
          value: log
        - name: AIRFLOW_CONN_DATABRICKS_DEFAULT
          value: databricks://dbc-d78d06da-7f8d.cloud.databricks.com?token=
        - name: AIRFLOW__CORE__EXECUTOR
          valueFrom:
            configMapKeyRef:
              key: AIRFLOW__CORE__EXECUTOR
              name: env
        - name: AIRFLOW__CORE__FERNET_KEY
          valueFrom:
            configMapKeyRef:
              key: AIRFLOW__CORE__FERNET_KEY
              name: env
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            configMapKeyRef:
              key: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              name: env
        - name: AIRFLOW__DATAHUB__ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              key: AIRFLOW__DATAHUB__ENVIRONMENT
              name: env
        - name: AIRFLOW__KUBERNETES__DAGS_VOLUME_HOST
          value: .//dags
        - name: AIRFLOW__KUBERNETES__LOGS_VOLUME_HOST
          value: .//logs
        - name: AIRFLOW__WEBSERVER__RBAC
          value: "False"
        - name: GOOGLE_CLOUD_PROJECT
          valueFrom:
            configMapKeyRef:
              key: GOOGLE_CLOUD_PROJECT
              name: env
        - name: PYTHONPATH
          value: /opt/airflow/src
        - name: WAIT_FOR_DATABASE
          valueFrom:
            configMapKeyRef:
              key: WAIT_FOR_DATABASE
              name: env
        image: datahub-airflow
        imagePullPolicy: "IfNotPresent"
        name: airflow-scheduler
        resources: {}
        volumeMounts:
        - mountPath: /opt/airflow/config
          name: scheduler-claim0
        - mountPath: /opt/airflow/airflow.cfg
          name: scheduler-claim1
        - mountPath: /opt/airflow/webserver_config.py
          name: scheduler-claim2
        - mountPath: /entrypoint
          name: scheduler-claim3
        - mountPath: /opt/airflow/bin
          name: scheduler-claim4
        - mountPath: /opt/airflow/dags
          name: scheduler-claim5
        - mountPath: /opt/airflow/src
          name: scheduler-claim6
        - mountPath: /opt/airflow/tests
          name: scheduler-claim7
        - mountPath: /opt/airflow/logs
          name: scheduler-claim8
        - mountPath: /opt/airflow/.flake8
          name: scheduler-claim9
        - mountPath: /home/airflow/.aws
          name: scheduler-claim10
        - mountPath: /home/airflow/.config
          name: scheduler-claim11
      hostname: scheduler
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: scheduler-claim0
        persistentVolumeClaim:
          claimName: scheduler-claim0
      - name: scheduler-claim1
        persistentVolumeClaim:
          claimName: scheduler-claim1
      - name: scheduler-claim2
        persistentVolumeClaim:
          claimName: scheduler-claim2
      - name: scheduler-claim3
        persistentVolumeClaim:
          claimName: scheduler-claim3
      - name: scheduler-claim4
        persistentVolumeClaim:
          claimName: scheduler-claim4
      - name: scheduler-claim5
        persistentVolumeClaim:
          claimName: scheduler-claim5
      - name: scheduler-claim6
        persistentVolumeClaim:
          claimName: scheduler-claim6
      - name: scheduler-claim7
        persistentVolumeClaim:
          claimName: scheduler-claim7
      - name: scheduler-claim8
        persistentVolumeClaim:
          claimName: scheduler-claim8
      - name: scheduler-claim9
        persistentVolumeClaim:
          claimName: scheduler-claim9
      - name: scheduler-claim10
        persistentVolumeClaim:
          claimName: scheduler-claim10
      - name: scheduler-claim11
        persistentVolumeClaim:
          claimName: scheduler-claim11
status: {}
