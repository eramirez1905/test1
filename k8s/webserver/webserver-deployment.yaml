apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/dwh: "true"
        io.kompose.service: webserver
    spec:
      containers:
      - args:
        - webserver
        env:
        - name: AIRFLOW_BUSINESS_UNIT
          value: log
        - name: AIRFLOW_CONN_DATABRICKS_DEFAULT
          value: databricks://dbc-d78d06da-7f8d.cloud.databricks.com?token=
        - name: AIRFLOW__CORE__EXECUTOR
          valueFrom:
            configMapKeyRef:
              key: AIRFLOW__CORE__EXECUTOR
              name: env
        - name: AIRFLOW__CORE__FERNET_KEY
          valueFrom:
            configMapKeyRef:
              key: AIRFLOW__CORE__FERNET_KEY
              name: env
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            configMapKeyRef:
              key: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              name: env
        - name: AIRFLOW__DATAHUB__ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              key: AIRFLOW__DATAHUB__ENVIRONMENT
              name: env
        - name: AIRFLOW__KUBERNETES__DAGS_VOLUME_HOST
          value: .//dags
        - name: AIRFLOW__KUBERNETES__LOGS_VOLUME_HOST
          value: .//logs
        - name: AIRFLOW__WEBSERVER__UPDATE_FAB_PERMS
          value: "False"
        - name: GOOGLE_CLOUD_PROJECT
          valueFrom:
            configMapKeyRef:
              key: GOOGLE_CLOUD_PROJECT
              name: env
        - name: JDBC_LOG_PASSWORD
        - name: PYTHONPATH
          value: /opt/airflow/src
        - name: WAIT_FOR_DATABASE
          valueFrom:
            configMapKeyRef:
              key: WAIT_FOR_DATABASE
              name: env
        image: datahub-airflow
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          exec:
            command:
            - '[ -f /opt/airflow-webserver.pid ]'
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 10
        name: airflow-webserver
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /opt/airflow/config
          name: webserver-claim0
        - mountPath: /opt/airflow/airflow.cfg
          name: webserver-claim1
        - mountPath: /opt/airflow/webserver_config.py
          name: webserver-claim2
        - mountPath: /entrypoint
          name: webserver-claim3
        - mountPath: /opt/airflow/bin
          name: webserver-claim4
        - mountPath: /opt/airflow/dags
          name: webserver-claim5
        - mountPath: /opt/airflow/src
          name: webserver-claim6
        - mountPath: /opt/airflow/tests
          name: webserver-claim7
        - mountPath: /opt/airflow/logs
          name: webserver-claim8
        - mountPath: /opt/airflow/.flake8
          name: webserver-claim9
        - mountPath: /home/airflow/.aws
          name: webserver-claim10
        - mountPath: /home/airflow/.config
          name: webserver-claim11
        - mountPath: /home/airflow/.kube_tool
          name: webserver-claim12
        - mountPath: /opt/airflow/.yamllint.yml
          name: webserver-claim13
      hostname: webserver
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: webserver-claim0
        persistentVolumeClaim:
          claimName: webserver-claim0
      - name: webserver-claim1
        persistentVolumeClaim:
          claimName: webserver-claim1
      - name: webserver-claim2
        persistentVolumeClaim:
          claimName: webserver-claim2
      - name: webserver-claim3
        persistentVolumeClaim:
          claimName: webserver-claim3
      - name: webserver-claim4
        persistentVolumeClaim:
          claimName: webserver-claim4
      - name: webserver-claim5
        persistentVolumeClaim:
          claimName: webserver-claim5
      - name: webserver-claim6
        persistentVolumeClaim:
          claimName: webserver-claim6
      - name: webserver-claim7
        persistentVolumeClaim:
          claimName: webserver-claim7
      - name: webserver-claim8
        persistentVolumeClaim:
          claimName: webserver-claim8
      - name: webserver-claim9
        persistentVolumeClaim:
          claimName: webserver-claim9
      - name: webserver-claim10
        persistentVolumeClaim:
          claimName: webserver-claim10
      - name: webserver-claim11
        persistentVolumeClaim:
          claimName: webserver-claim11
      - name: webserver-claim12
        persistentVolumeClaim:
          claimName: webserver-claim12
      - name: webserver-claim13
        persistentVolumeClaim:
          claimName: webserver-claim13
status: {}
