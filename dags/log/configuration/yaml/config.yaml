teams:
  data-engineering:
    members:
      - odracci
      - UMLKXKKB5 # Alessandro La Corte
      - UPRMVRQ1Z # Faisal Farouk
      - USQTQJB5E # Vishnu Viswanathan
  data-bi:
    members:
      - odracci
      - UMLKXKKB5 # Alessandro La Corte
      - UPRMVRQ1Z # Faisal Farouk
      - USQTQJB5E # Vishnu Viswanathan
      - U99J1MX44 # Pasquale Santoro
      - UD49HM5HS # Mahaut Dunoyer
      - UPUD8CL8H # Trupti Karnire
      - UC0JJPSLU # Jimmy Pang
      - U5V14PE56 # Admir Bajramovic
      - UUG37QESD # Bruno Lichy Kanashiro
      - UV9HGGJBU # Galih Rizky Ramadhani
      - UAGBJ5W72 # Devin Topkaya
      - UUR7481FF # Leandro Mazoni
      - U017C1NNY3B # Xun Gong
      - U019BA1FAGH # Grecia Diaz
  data-bi-rps:
    members:
      - odracci
      - UMLKXKKB5 # Alessandro La Corte
      - UPRMVRQ1Z # Faisal Farouk
      - UC0JJPSLU # Jimmy Pang
      - U5V14PE56 # Admir Bajramovic
      - U5XD58Z2T # Frank Conroy
      - UAGBJ5W72 # Devin Topkaya
      - UUG37QESD # Bruno Lichy Kanashiro
      - UV9HGGJBU # Galih Rizky Ramadhani
  data-science:
    members:
      - UBHJ1B2CD # kagoshima
      - UDDND4AM7 # Rok Fortuna
      - UJEGS5AQN # Elena Shirokova
      - UPF033KN0 # Georg Heimel
      - USB688UDB # Matteo Casolari
      - UD82YQNHM # Nils Hinrichs
      - US9BU5GEM # Miriam Wienholt
      - UJHSR4E8H # Sudhanshu Nautiyal
      - stelsemeyer
      - ssuerbier
  staffing:
    members:
      - UBHJ1B2CD # kagoshima
      - UD82YQNHM # Nils Hinrichs
      - stelsemeyer
      - ssuerbier
      - U5EE7PC7J # marianspaeth
      - U4YRG0S5C # fpopp
      - U9ZMRTRAL # jan.baumann
      - U7CGZEL81 # Florian Wattin
  rider-management:
    members:
      - UCMSJNW5C # evgenii.sokolov
      - UHLB8F2NP # pedro.antonio
      - UQ60C60SU # david.bado
      - UMXUWRSSH # dmitrii.matveev
      - USC9L7GAU # ignacio.avalos
      - UU744BKV4 # kendy.alvarado
      - U0157QNA2RL # onur.ozcan
  freshdesk-reports:
    members:
      - odracci
      - UMLKXKKB5 # Alessandro La Corte
      - UPRMVRQ1Z # Faisal Farouk
      - U5HJ6HP9V # Jonas Weidtke

slack:
  channel: ''
  channel_errors: ''
  channel_cost_monitoring:
    name: ''
    id: ''
  has_mentions: false

opsgenie:
  responders:
    - name: 'Fulfillment-Data'
      type: 'team'
  visibleTo:
    - name: 'Fulfillment-Data'
      type: 'team'

cost_monitoring:
  project_id: 'fulfillment-dwh-staging'

business-unit:
  name: "log"

# DAG configurations
dags: {}

simulator-node:
  affinity: {}
  tolerations: []

batch-node:
  affinity: {}
  tolerations: []

gpu-node:
  affinity: {}
  tolerations: []

gcs_staging: &gcs_staging
  bucket_name: 'fulfilment-dwh-staging-import'

# See BigQueryCheckMetadataExecutionOperator to why it is set to production
bigquery_check_metadata_execution:
  project_id: 'fulfillment-dwh-production'

bigquery:
  <<: *gcs_staging
  project_id: 'fulfillment-dwh-staging'
  staging_project_id: 'fulfillment-dwh-staging'
  bigquery_conn_id_flat: 'bigquery_logistics_flat'
  bigquery_conn_id_on_demand: 'bigquery_default'
  dataset:
    staging: staging
    raw: raw
    dl: dl
    hl: hl
    cl: cl
    acl: acl
    curated_data_filtered: curated_data_filtered
    curated_data_shared: curated_data_shared
  create_views: false

pools:
  process_order_forecast:
    name: process_order_forecast
    slots: 2
    description: "Pool to process order forecast, split up in country sub DAGs operators"
  monitor_order_forecast:
    name: monitor_order_forecast
    slots: 2
    description: "Pool for monitoring the order forecasting"
  process_prep_time_data:
    name: process_prep_time_data
    slots: 1
    description: "Pool for processing the input data of prep time algorithm"
  predict_utrs:
    name: predict_utrs
    slots: 2
    description: "Pool to process and predict utr assumptions for order forecasting and staffing"
  no_show_forecast:
    name: no_show_forecast
    slots: 4
    description: "Pool to create no show forecast for staffing"
  hurrier_delay_model:
    name: hurrier_delay_model
    slots: 12
    description: "Pool to train hurrier delay model weekly"
  staffing_assignments:
    name: staffing_assignments
    slots: 1
    description: "Pool to limit gurobi assignments job to 1 at a time"
  forecast_run_models:
    name: forecast_run_models
    slots: 24
    description: "Pool to not start too many forecast pods at the same time."
  driving_time:
    name: driving_time
    slots: 2
    description: "Pool for doing driving time model training"
  gpu_training:
    name: gpu_training
    slots: 10
    description: "Pool for model training on GPU instance limit"
  process-breaks-forecast:
    name: breaks_forecasting_bq_save
    slots: 4
    description: "Pool for breaks forecasting when saving data to BQ"
  process_tracking_time:
    name: process_tracking_time
    slots: 20
    description: "Pool to train quantile models"
  export_read_replica_long_running_tasks:
    name: export_read_replica_long_running_tasks
    slots: 1
    description: "Pool to process export read replica long running tasks"
  walking_time:
    name: walking_time
    slots: 5
    description: "Pool for walking times model training"
  walking_time_spark:
    name: walking_time_spark
    slots: 4
    description: "Pool for walking times spark processing"
  rider_scoring:
    name: rider_scoring
    slots: 20
    description: "Pool for rider scoring DAG"
  bigquery_flat:
    name: bigquery_flat
    slots: 4
    description: "Pool for tasks running with bigquery flat"
  curated_data_dynamic_pricing_user_sessions:
    name: curated_data_dynamic_pricing_user_sessions
    slots: 1
    description: "Pool to process cl.dynamic_pricing_user_sessions query"

debezium:
  broker_endpoints: b-1.kafka.datahub-logistics.staging-eu.tf:9092,b-2.kafka.datahub-logistics.staging-eu.tf:9092,b-3.kafka.datahub-logistics.staging-eu.tf:9092
  schema_registry_location: "http://debezium-eu-schema-registry.debezium.svc.cluster.local:8081"
