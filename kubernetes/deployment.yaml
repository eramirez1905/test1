apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    com.docker.service.id: airflow-webserver
    com.docker.service.name: webserver
    com.docker.stack.namespace: airflow
  name: webserver
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      com.docker.service.id: airflow-webserver
      com.docker.service.name: webserver
      com.docker.stack.namespace: airflow
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        com.docker.service.id: airflow-webserver
        com.docker.service.name: webserver
        com.docker.stack.namespace: airflow
    spec:
      containers:
      - args:
        - webserver
        env:
        - name: AIRFLOW_CONN_DATABRICKS_DEFAULT
          value: databricks://dbc-d78d06da-7f8d.cloud.databricks.com?token=
        - name: AIRFLOW__KUBERNETES__DAGS_VOLUME_HOST
          value: ${APPS_PATH}/logistics-airflow/dags
        - name: AIRFLOW__KUBERNETES__LOGS_VOLUME_HOST
          value: ${APPS_PATH}/logistics-airflow/logs
        - name: EXECUTOR
          value: Kubernetes
        - name: FERNET_KEY
          value: At4cT5-AdWvsgXEbXkKpwgettWqvT3fbMzFzHF0z-g0=
        - name: LOAD_EX
          value: "n"
        - name: POSTGRES_DB
          value: airflow
        - name: POSTGRES_PASSWORD
          value: airflow
        - name: POSTGRES_USER
          value: airflow
        image: logistics-airflow
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - '[ -f ${AIRFLOW_HOME}/airflow-webserver.pid ]'
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 30
        name: webserver
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: "838860800"
          requests:
            cpu: 150m
            memory: "838860800"
        volumeMounts:
        - mountPath: /opt/airflow/config
          name: mount-0
          subPath: config
        - mountPath: /opt/airflow/airflow.cfg
          name: mount-1
          subPath: airflow.cfg
        - mountPath: /opt/airflow/dags
          name: mount-2
          subPath: dags
        - mountPath: /opt/airflow/logs
          name: mount-3
          subPath: logs
      dnsPolicy: ClusterFirst
      hostname: webserver
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: ${APPS_PATH}/logistics-airflow/docker/airflow
          type: ""
        name: mount-0
      - hostPath:
          path: ${APPS_PATH}/logistics-airflow/docker/airflow
          type: ""
        name: mount-1
      - hostPath:
          path: ${APPS_PATH}/logistics-airflow
          type: ""
        name: mount-2
      - hostPath:
          path: ${APPS_PATH}/logistics-airflow
          type: ""
        name: mount-3

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    com.docker.service.id: airflow-scheduler
    com.docker.service.name: scheduler
    com.docker.stack.namespace: airflow
  name: scheduler
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      com.docker.service.id: airflow-scheduler
      com.docker.service.name: scheduler
      com.docker.stack.namespace: airflow
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        com.docker.service.id: airflow-scheduler
        com.docker.service.name: scheduler
        com.docker.stack.namespace: airflow
    spec:
      containers:
      - args:
        - scheduler
        env:
        - name: AIRFLOW_CONN_DATABRICKS_DEFAULT
          value: databricks://dbc-d78d06da-7f8d.cloud.databricks.com?token=
        - name: AIRFLOW__KUBERNETES__DAGS_VOLUME_HOST
          value: ${APPS_PATH}/logistics-airflow/dags
        - name: AIRFLOW__KUBERNETES__LOGS_VOLUME_HOST
          value: ${APPS_PATH}/logistics-airflow/logs
        - name: EXECUTOR
          value: Kubernetes
        - name: FERNET_KEY
          value: At4cT5-AdWvsgXEbXkKpwgettWqvT3fbMzFzHF0z-g0=
        - name: LOAD_EX
          value: "n"
        - name: POSTGRES_DB
          value: airflow
        - name: POSTGRES_PASSWORD
          value: airflow
        - name: POSTGRES_USER
          value: airflow
        image: logistics-airflow
        imagePullPolicy: IfNotPresent
        name: scheduler
        resources:
          limits:
            cpu: 150m
            memory: 524288k
          requests:
            cpu: 100m
            memory: "209715200"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/airflow/config
          name: mount-0
          subPath: config
        - mountPath: /opt/airflow/airflow.cfg
          name: mount-1
          subPath: airflow.cfg
        - mountPath: /opt/airflow/dags
          name: mount-2
          subPath: dags
        - mountPath: /opt/airflow/logs
          name: mount-3
          subPath: logs
      dnsPolicy: ClusterFirst
      hostname: scheduler
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: ${APPS_PATH}/logistics-airflow/docker/airflow
          type: ""
        name: mount-0
      - hostPath:
          path: ${APPS_PATH}/logistics-airflow/docker/airflow
          type: ""
        name: mount-1
      - hostPath:
          path: ${APPS_PATH}/logistics-airflow
          type: ""
        name: mount-2
      - hostPath:
          path: ${APPS_PATH}/logistics-airflow
          type: ""
        name: mount-3
